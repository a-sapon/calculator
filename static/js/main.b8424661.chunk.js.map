{"version":3,"sources":["components/KeyPad/KeyPad.module.css","components/Output/Output.module.css","components/App.module.css","components/Output/Output.js","components/KeyPad/KeyPad.js","components/App.js","index.js"],"names":["module","exports","Output","result","className","styles","output","KeyPad","addToOutput","clear","addZero","addDecimal","makePositiveOrNegative","getPercentage","add","subtract","multiply","divide","calculate","activePlus","activeMinus","activeMultiply","activeDivide","keypad","digits","onClick","digitsBtn","type","zero","operations","operationsBtn","active","App","useState","setOutput","prevNumber","setPrevNumber","operator","setOperator","setActivePlus","setActiveMinus","setActiveMultiply","setActiveDivide","container","e","persist","target","innerText","prev","String","split","includes","Math","sign","concat","substr","parseFloat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8424661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"keypad\":\"KeyPad_keypad__6BTun\",\"digits\":\"KeyPad_digits__3HDO8\",\"digitsBtn\":\"KeyPad_digitsBtn__2zjrA\",\"zero\":\"KeyPad_zero__2eez2\",\"operationsBtn\":\"KeyPad_operationsBtn__3YYS6\",\"operations\":\"KeyPad_operations__2FBa8\",\"active\":\"KeyPad_active__1wvrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"output\":\"Output_output__2yetd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1ggPF\"};","import React from 'react';\r\nimport styles from './Output.module.css';\r\n\r\nconst Output = ({ result }) => <div className={styles.output}>{result}</div>;\r\n\r\nexport default Output;\r\n","import React from 'react';\r\nimport styles from './KeyPad.module.css';\r\n\r\nconst KeyPad = ({\r\n  addToOutput,\r\n  clear,\r\n  addZero,\r\n  addDecimal,\r\n  makePositiveOrNegative,\r\n  getPercentage,\r\n  add,\r\n  subtract,\r\n  multiply,\r\n  divide,\r\n  calculate,\r\n  activePlus,\r\n  activeMinus,\r\n  activeMultiply,\r\n  activeDivide\r\n}) => (\r\n  <div className={styles.keypad}>\r\n    <div className={styles.digits}>\r\n      <button onClick={clear} className={styles.digitsBtn} type='button'>AC</button>\r\n      <button onClick={makePositiveOrNegative} className={styles.digitsBtn} type='button'>+/-</button>\r\n      <button onClick={getPercentage} className={styles.digitsBtn} type='button'>%</button>\r\n\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>7</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>8</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>9</button>\r\n\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>4</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>5</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>6</button>\r\n\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>1</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>2</button>\r\n      <button onClick={addToOutput} className={styles.digitsBtn} type='button'>3</button>\r\n\r\n      <button onClick={addZero} type='button' className={styles.zero}>0</button>\r\n      <button onClick={addDecimal} className={styles.digitsBtn} type='button'>.</button>\r\n    </div>\r\n\r\n    <div className={styles.operations}>\r\n      <button onClick={divide} className={activeDivide ? `${styles.operationsBtn} ${styles.active}` : `${styles.operationsBtn}`} type='button'>&#247;</button>\r\n      <button onClick={multiply} className={activeMultiply ? `${styles.operationsBtn} ${styles.active}` : `${styles.operationsBtn}`} type='button'>x</button>\r\n      <button onClick={subtract} className={activeMinus ? `${styles.operationsBtn} ${styles.active}` : `${styles.operationsBtn}`} type='button'>-</button>\r\n      <button onClick={add} className={activePlus ? `${styles.operationsBtn} ${styles.active}` : `${styles.operationsBtn}`} type='button'>+</button>\r\n      <button onClick={calculate} className={styles.operationsBtn} type='button'>=</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default KeyPad;\r\n","import React, { useState } from 'react';\r\nimport Output from './Output/Output';\r\nimport KeyPad from './KeyPad/KeyPad';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  const [output, setOutput] = useState('0');\r\n  const [prevNumber, setPrevNumber] = useState('');\r\n  const [operator, setOperator] = useState('');\r\n\r\n  const [activePlus, setActivePlus] = useState(false);\r\n  const [activeMinus, setActiveMinus] = useState(false);\r\n  const [activeMultiply, setActiveMultiply] = useState(false);\r\n  const [activeDivide, setActiveDivide] = useState(false);\r\n\r\n  const addToOutput = (e) => {\r\n    e.persist();\r\n    if (output === '0') {\r\n      setOutput(e.target.innerText);\r\n    } else if (operator !== '') {\r\n      setOutput((prev) => prev + e.target.innerText);\r\n    } else {\r\n      setOutput((prev) => prev + e.target.innerText);\r\n    }\r\n  };\r\n\r\n  const clear = () => {\r\n    setPrevNumber('');\r\n    setOperator('');\r\n    setActivePlus(false);\r\n    setActiveMinus(false);\r\n    setActiveMultiply(false);\r\n    setActiveDivide(false);\r\n  };\r\n\r\n  const clearAllBtn = () => {\r\n    setOutput('0');\r\n    clear();\r\n  };\r\n\r\n  const addZero = (e) => {\r\n    e.persist();\r\n    if (output === '0') {\r\n      return;\r\n    } else {\r\n      setOutput((prev) => prev + e.target.innerText);\r\n    }\r\n  };\r\n\r\n  const addDecimal = (e) => {\r\n    e.persist();\r\n    if (!String(output).split('').includes(e.target.innerText)) {\r\n      if (output === '') {\r\n        setOutput('0' + e.target.innerText);\r\n      } else {\r\n        setOutput((prev) => prev + e.target.innerText);\r\n      }\r\n    }\r\n  };\r\n\r\n  const makePositiveOrNegative = () => {\r\n    if (Math.sign(+output) === 1) {\r\n      setOutput('-'.concat(output));\r\n    } else {\r\n      setOutput(output.substr(1));\r\n    }\r\n  };\r\n\r\n  const getPercentage = () => {\r\n    setOutput(+output / 100);\r\n  };\r\n\r\n  const add = () => {\r\n    setPrevNumber(parseFloat(output));\r\n    setOperator('plus');\r\n    setOutput('');\r\n    setActivePlus(true);\r\n  };\r\n\r\n  const subtract = () => {\r\n    setPrevNumber(parseFloat(output));\r\n    setOperator('minus');\r\n    setOutput('');\r\n    setActiveMinus(true);\r\n  };\r\n\r\n  const multiply = () => {\r\n    setPrevNumber(parseFloat(output));\r\n    setOperator('multiply');\r\n    setOutput('');\r\n    setActiveMultiply(true);\r\n  };\r\n\r\n  const divide = () => {\r\n    setPrevNumber(parseFloat(output));\r\n    setOperator('divide');\r\n    setOutput('');\r\n    setActiveDivide(true);\r\n  };\r\n\r\n  const calculate = () => {\r\n    if (output !== '') {\r\n      switch (operator) {\r\n        case 'plus':\r\n          setOutput(prevNumber + parseFloat(output));\r\n          break;\r\n        case 'minus':\r\n          setOutput(prevNumber - parseFloat(output));\r\n          break;\r\n        case 'multiply':\r\n          setOutput(prevNumber * parseFloat(output));\r\n          break;\r\n        case 'divide':\r\n          setOutput(prevNumber / parseFloat(output));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch (operator) {\r\n        case 'plus':\r\n          setOutput(prevNumber + prevNumber);\r\n          break;\r\n        case 'minus':\r\n          setOutput(prevNumber - prevNumber);\r\n          break;\r\n        case 'multiply':\r\n          setOutput(prevNumber * prevNumber);\r\n          break;\r\n        case 'divide':\r\n          setOutput(prevNumber / prevNumber);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    clear();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Output result={output || prevNumber} />\r\n      <KeyPad\r\n        addToOutput={addToOutput}\r\n        clear={clearAllBtn}\r\n        addZero={addZero}\r\n        addDecimal={addDecimal}\r\n        makePositiveOrNegative={makePositiveOrNegative}\r\n        getPercentage={getPercentage}\r\n        add={add}\r\n        subtract={subtract}\r\n        multiply={multiply}\r\n        divide={divide}\r\n        calculate={calculate}\r\n        activePlus={activePlus}\r\n        activeMinus={activeMinus}\r\n        activeMultiply={activeMultiply}\r\n        activeDivide={activeDivide}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}